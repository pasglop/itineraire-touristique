services:
  web:
    build: ./app/.
    ports:
      - "80:80"
  postgres:
    image: "postgres:15.3-alpine3.18"
    container_name: ${PG_CONTAINER}
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "${PG_PORT}:${PG_PORT}"
    networks:
      - postgres
  neo4j:
      container_name: ${NEO4J_CONTAINER}
      image: neo4j:4.4-community
      restart: unless-stopped
      ports:
        - ${NEO4J_PORT}:${NEO4J_PORT}
        - ${NEO4J_BOLT_PORT}:${NEO4J_BOLT_PORT}
      volumes:
        - neo4j:/conf
        - neo4j:/data
        - ./raw_data/:/import
        - neo4j:/logs
        - neo4j:/plugins
      environment:
        # Raise memory limits
        NEO4J_server_memory_pagecache_size: 1G
        NEO4J_server_memory_heap_initial__size: 1G
        NEO4J_server_memory_heap_max__size: 1G
        NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}
        NEO4JLABS_PLUGINS: '["graph-data-science", "apoc"]'
        NEO4J_dbms_security_procedures_allowlist: gds.*, apoc.*
        NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    neo4j: