services:
  web:
    build:
        context: source/.
        dockerfile: ./dash/Dockerfile
    environment:
      - API_URL=http://${API_CONTAINER}:${API_PORT}
    ports:
        - "8080:8080"
  api:
    build:
        context: source/.
        dockerfile: ./api/Dockerfile
    container_name: ${API_CONTAINER}
    environment:
        - NEO4J_URI=bolt://${NEO4J_HOST}:${NEO4J_BOLT_PORT}
        - NEO4J_USER=neo4j
        - NEO4J_PASSWORD=${NEO4J_PASSWORD}
        - PG_HOST=${PG_CONTAINER}
        - PG_PORT=${PG_PORT}
        - PG_USER=${PG_USER}
        - PG_PASSWORD=${PG_PASSWORD}
        - PG_DB=${PG_DB}
        - API_HOST=${API_CONTAINER}
        - API_PORT=${API_PORT}
    ports:
      - ${API_PORT}:${API_PORT}
  postgres:
    image: "postgres:15.3-alpine3.18"
    container_name: ${PG_CONTAINER}
    hostname: ${PG_CONTAINER}
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "${PG_PORT}:${PG_PORT}"
  neo4j:
      container_name: ${NEO4J_CONTAINER}
      image: neo4j:5.10-community
      restart: unless-stopped
      ports:
        - ${NEO4J_PORT}:${NEO4J_PORT}
        - ${NEO4J_BOLT_PORT}:${NEO4J_BOLT_PORT}
      volumes:
        - neo4j5:/conf
        - neo4j5:/data
        - ./neo4j/import/:/import
        - ./neo4j/logs/:/logs
        - neo4j5:/plugins
      environment:
        # Raise memory limits
        NEO4J_server_memory_pagecache_size: 1G
        NEO4J_server_memory_heap_initial__size: 1G
        NEO4J_server_memory_heap_max__size: 1G
        NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}
        NEO4J_PLUGINS: '["graph-data-science", "apoc"]'
        NEO4J_dbms_security_procedures_allowlist: gds.*, apoc.*
        NEO4J_dbms_security_procedures_unrestricted: gds.*, apoc.*
volumes:
    postgres:
    neo4j5: